h1(nivaa3). Hva er det?

h2. Introduksjon

p(intro). Et bilde av en tilfeldig ting vises på tavlen. Men bildet er forvrengt, slik at du må gjette hva det er ved å klikke på et av alternativene som vises under. Desto raskere du gjetter riktig, desto flere poeng får du.


!(skjermbilde). skjermbilde.png!


table(oversikt).
| %(sjekkliste)Sjekkliste%| Følg instruksjonene på lista. Huk av etter hvert.|
| %(test)Test%| Klikk på det grønne flagget for å teste koden.|
| %(lagre)Lagre%| Husk å lagre koden når du har lagt til noe nytt.|

h4(steg). Steg 1: Få flere ting til å vise seg på tavlen

p(intro). Vi vil at noen forskjellige bilder skal komme opp på tavlen.

%(sjekkliste)Sjekkliste%

(x)# *Start et nytt Scratch-prosjekt* og %(klikk)slett% kattefiguren.
# Klikk på %(klikk)Stage% og deretter på %(klikk)Bakgrunner%-fanen. %(klikk)Importer Indoors/chalkboard%-bakgrunnen.
# *Importer en valgfri figur*.
# *Plasser den i midten av tavlen*, og endre størrelsen hvis ikke den passer.!(systemdetalj). endre-storrelse.png!
# *Legg til fire nye drakter* fra %(klikk)Things%-mappen.

!(systemutsnitt). drakter.png!

(x)#6 La oss nå *få en tilfeldig ting til å dukke opp*. Bruk dette skriptet:

!(systemutsnitt). skript1.png!

%(test)Test prosjektet%

(x)#7 *Klikk på det grønne flagget*. Endrer figuren seg? Klikk flere ganger. Får figuren stadig nye drakter? Flott. <br><br>Det gjør ingenting om samme drakt kommer opp flere ganger på rad. Det er helt normalt når det trekkes en tilfeldig drakt hver gang. <br><br>Du legger kanskje merke til at det flimrer litt når drakten skiftes? Det skal vi fikse i neste steg.

%(lagre)Lagre prosjektet%

h4(steg). Steg 2: Forvreng bildet

p(intro). La oss nå forvrenge figuren når den dukker opp på tavlen, så det blir vanskeligere å gjette hva det er. Deretter skal vi gradvis gjøre vi den tydeligere igjen.

p. Vi skal bruke en poeng-variabel til å kontrollere graden av forvrenging. Når antallet poeng synker, vil også graden av forvrenging synke. Poengvariabelen fungerer dermed som en tidteller.

%(sjekkliste)Sjekkliste%

(x)# Klikk på %(klikk)Variabler% og opprett variabelen %(klikk)poeng%.
# Endre skriptet slik:

!(systemutsnitt). skript2.png!
  
%(test)Test prosjektet%

(x)#3 *Klikk på det grønne flagget*<br>
Kommer det opp et tilfeldig og forvrengt bilde?<br>
Blir bildet gradvis tydeligere?<br>
Går poengsummen ned i takt med at bildet blir tydeligere?<br>
Blir bildet fullstendig tydelig når poengsummen er 0?
Får du fremdeles nye ting på tavlen når du klikker på det grønne flagget?

%(lagre)Lagre prosjektet%

%(prove)Ting å prøve%
(x)#4 Prøv å *endre poengsummen fra start*, samt *hvor mye den skal forandre seg for hver gang den går gjennom løkka*.
# Forsøk noen *ulike grafiske effekter* fra nedtrekkslisten. Hvordan påvirker dette vanskelighetgsraden?

h4(steg). Steg 3: La spilleren prøve å gjette bildet

p(intro). Så langt har vi fått vårt tilfeldige bilde til gradvis å bli tydeligere, samtidig som poengsummen synker. Men hvordan skal man vinne spillet? Vi vil legge til noen figurer nederst på skjermen som spilleren kan klikke på. Klikker man på den rette, vinner man spillet. Klikker man på feil, forsvinner figuren og spillet fortsetter med en ny figur.

%(sjekkliste)Sjekkliste%

(x)# Først må vi å vite hva det rette svaret er. *Opprett en ny* %(klikk)variabel%, og kall den %(variabel)svar%. Denne skal gjelde for alle figurene.
# *Endre skriptet* slik at det klarer å holde styr på hva som er rett svar. Etter den første %(styring)gjenta%-løkken legger du derfor til blokken %(variabel)sett [svar] til%  %(utseende)drakt #% 

!(systemutsnitt). skript3.png!

(x)#3 Nå må vi *legge til flere figurer* som spilleren kan klikke på. Gi først figuren din navnet _spørsmål_. *Lag så en kopi av figuren* ved å høyreklikke på den. På scenen drar du deretter figuren ned til det venstre hjørnet. 
# *Endre figurens navn* til _svar1_.
# Høyreklikk på figurens %(klikk)skript% og velg %(klikk)slett%. Slett også alle dens %(klikk)kostymer%, med unntak av det første.
# Gjenta de to forrige punktene for å lage _svar2_. Plasser denne figuren ved siden av _svar1_, og slett alle, bortsett fra det andre kostymet.
# Gjenta disse punktene tre ganger til, slik at du har fått laget _svar3_, _svar4 og _svar5_.

!(systemutsnitt). skjermbilde-fem-svar.png!

(x)#8 Nå må vi *få alle figurene til å reagere når de blir klikket på*. Hva som skal skje avhenger av om spilleren har klikket riktig eller galt. Legg til dette skriptet:

!(systemutsnitt). skript4.png!

(x)#9 *Dra skriptet over til de andre figurene*, slik at alle får hver sin kopi. Klikk på %(klikk)svar2% og endre variabelen i %(styring)if%-blokka til %(variabel)svar% %(operator)= [ 2 ]%. Fortsett slik med de andre figurene også (svar = 3, svar = 4, etc).
# Nå skal vi lage skriptet som *gir melding til spilleren når han har vunnet*. Klikk på %(klikk)figur1% igjen og legg til dette skriptet:

!(systemutsnitt). skript5.png!

%(test)Test prosjektet%

(x)#11 *Klikk på det grønne flagget*.<br><br>
Når du tester spillet kan du bruke svarskjermen på scenen for å si hva rett svar er. Det fungerer bra for testing.<br><br>
Hva skjer når du klikker på riktig svar?<br><br>
Hva skjer med poengsummen når du klikker på riktig svar?<br><br>
Hva skjer når du klikker på galt svar?<br><br>
Hva skjer med det gale svaret når du starter på et nytt spill?<br><br>
*Testen viser oss to problemer*:<br>
1. Ting som ble klikket på ved galt svar kommer ikke tilbake når et nytt spill starter.<br>
2. Poengsummen fortsetter å gå ned, selv når man har klikket på riktig svar.


(x)#12 For å fikse det første problemet må vi legge til følgende skript for hver av de fem svarfigurene:

!(systemutsnitt). skript6.png!

(x)#13 For å fikse det andre problemet må vi få *stoppet spørsmålfigurens* %(styring)gjenta til%-løkke, når spilleren klikker på riktig svar. Vi kan bruke en ny variabel for å gjøre det. Vi kaller denne %(klikk)vant% og legger inn en %(variabel)sett%-blokk som gir den verdien 0 når spillet starter, og en annen som setter verdien til 1 når spillet vinnes. Se skript under.
# I tillegg må vi *stoppe* %(styring)gjenta til%-løkken når %(variabel)poengsummen% %(operator)= 0% ELLER %(variabel)vant% %(operator)= 1%. Se skript under. 
# Til slutt legger vi også inn en %(utseende)ta bort grafiske effekter%-blokk som *avslører spørsmålsfiguren*, når spilleren har gjettet riktig. Skriptet skal nå se slik ut:

!(systemutsnitt). skript7.png!

%(lagre)Lagre prosjektet%

p(utro). Gratulerer! Du er nå ferdig med spillet. Men det fins mange flere ting du kan gjøre med det. Prøv deg gjerne på utfordringene vi har laget!


h4(utfordring). Utfordring 1: Gjør spillet enklere eller vanskeligere

(x)# Forsøk å *endre hvor lenge bildet vises frem* og *hvor raskt poengene faller*.
# Forsøk å *endre forvrengingen* av bildet.
# Forsøk å gjøre tingene *likere hverandre* eller *mer forskjellig*. Husk også å forandre svarfigurenes drakter.

%(lagre)Lagre prosjektet%

h4(utfordring). Utfordring 2: Forvreng bildet ulikt fra gang til gang

(x)# For øyeblikket bruker spillet samme forvrengingsalgoritme hele tiden. Men i steg 2 prøvde du kanskje ut noen forskjellige alternativer. Prøv nå om du kan finne *noen flere forvrenginger* som du synes virker like bra som %(klikk)farge% og %(klikk)piksler%.<br><br>
*Hint:* Forsøk å opprette en ny %(klikk)variabel% som du kaller %(klikk)forvrenging%. Sett denne til en tilfeldig verdi i starten av spillet. Bruk så %(styring)hvis%-blokker i %(styring)gjenta til%-løkken, for å velge ut en forvrenging til det hvert spill.

%(lagre)Lagre prosjektet%

h4(utfordring). Utfordring 3: La hvert spill få flere runder

(x)# For øyeblikket er hvert spill uavhengig av andre. Prøv om du kan *legge til flere runder* slik at man får gjette på tre ting og kan vinne inntil 300 poeng.<br><br>
HINT 1: Du vil trenge en ekstra variabel for å *lagre den totale poengsummen*. Du må også ha en %(klikk)løkke% som går rundt for hver runde.<br><br>
HINT 2: Du må også få tingene som ble gjettet galt til å *dukke opp igjen* på skjermen. Kanskje du kan bruke en %(styring)send melding%-blokk til det?

%(lagre)Lagre prosjektet%


h4(utfordring). Utfordring 4: Gjør rundene vanskeligere

(x)# *Gjør nå spillet vanskeligere og vanskeligere for hver runde*. Kanskje hver runde også skal gi ulikt antall poeng? Bør spilleren også få ekstra mange poeng for å gjette kjapt i de vanskeligste rundene? <br><br>
*Hint:* Hvordan kan du vite hvilken runde du er i? Hvordan kan du bruke det til å endre vanskelighetsgraden og poengsummen?

%(lagre)Lagre prosjektet%


h4(utfordring). Utfordring 5: Fortsett til spilleren gjør feil

(x)# Isteden for et bestemt antall runder, kan du *la spillet gå til det blir klikket på feil svar*. 


%(lagre)Lagre prosjektet%

h4(utfordring). Utfordring 6: Gjør spillet enklere eller vanskeligere basert på hvor bra spilleren gjør det

(x)# Istedenfor å gjøre det stadig vanskeligere kan vi *tilpasse vanskelighetsgraden til spillernes dyktighet*. Hvis de raskt gjetter riktig ting, kan den neste runden gjøres vanskeligere. Hvis de klikker feil eller gjetter sakte, kan neste runde gjøres enklere.<br><br>
*Hint:* Dette fungerer bare hvis du _ikke_ samler opp poengsummen fra runde til runde.
 

%(lagre)Lagre prosjektet%

h4(utfordring). Utfordring 7: Hold styr på rekorden

(x)# Finn en måte å *lagre den høyeste poengsummen på*. Klarer du også å lagre navnet til spilleren, og få spillet til å si hvem som har rekorden?


%(lagre)Lagre prosjektet%

h4(utfordring). Utfordring 8: Gi straff for galt svar

(x)# Slik spillet er nå kan man bare klikke som en gal på alle svarene, så vil man raskt finne riktig svar. Det kan derfor være en god idé å *trekke fra poeng hver gang spilleren klikker galt*.


%(lagre)Lagre prosjektet%



